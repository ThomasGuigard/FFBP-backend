{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger FFBP",
    "description": "FFBP Api with the swagger-2.0 specification",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Swagger API Team"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "ffbp.swagger.io",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/events": {
      "post": {
        "description": "Creates a new event in the store. Duplicates are allowed.",
        "operationId": "addEvent",
        "parameters": [
          {
            "name": "event",
            "in": "body",
            "description": "Event to add to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "event response",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/leagues": {
      "post": {
        "description": "Creates a new league in the store. Duplicates are allowed.",
        "operationId": "addLeague",
        "parameters": [
          {
            "name": "league",
            "in": "body",
            "description": "League to add to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/League"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "league response",
            "schema": {
              "$ref": "#/definitions/League"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/signin": {
      "post": {
        "description": "Sign in user. Return a JWT.",
        "operationId": "signInUser",
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "user's email",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "user's password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "signIn response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/signout": {
      "post": {
        "description": "Sign out user.",
        "operationId": "signOutUser",
        "responses": {
          "201": {
            "description": "signOut response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/signup": {
      "post": {
        "description": "Creates a new user in the store. Duplicates on email are not allowed.",
        "operationId": "signUpUser",
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "user's email",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "user's password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "signUp response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Event": {
      "type": "object",
      "required": [
        "name",
        "date",
        "challengersIds",
        "kind"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "date": {
          "type": "object"
        },
        "challengersIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "type": "integer"
        }
      }
    },
    "League": {
      "type": "object",
      "required": [
        "name",
        "startedAt",
        "challengersIds"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "startedAt": {
          "type": "object"
        },
        "challengersIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}